# Use specific, minimal base image
FROM node:18.17.0-alpine3.18

# Add metadata
LABEL maintainer="your-email@example.com" \
      version="1.0.0" \
      description="Secure Node.js application"

# Install security updates and required packages
RUN apk update && \
    apk upgrade && \
    apk add --no-cache \
        dumb-init \
        curl && \
    rm -rf /var/cache/apk/* /tmp/*

# Create non-root user with specific UID/GID
RUN addgroup -g 1001 -S appgroup && \
    adduser -S appuser -u 1001 -G appgroup

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY --chown=appuser:appgroup package*.json ./

# Install dependencies as root, then clean up
RUN npm install --only=production && \
    npm cache clean --force && \
    rm -rf /tmp/* /root/.npm

# Copy application code
COPY --chown=appuser:appgroup app.js ./

# Set proper permissions
RUN chmod 755 /app && \
    chmod 644 /app/package.json /app/app.js

# Switch to non-root user
USER appuser

# Expose non-privileged port
EXPOSE 3000

# Add health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Run application
CMD ["node", "app.js"]